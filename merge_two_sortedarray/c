#include <stdio.h>

// Function to merge two arrays without sorting
void mergeUnsortedArrays(int arr1[], int n1, int arr2[], int n2, int merged[]) {
    int i, k = 0;

    // Copy elements of arr1 to merged array
    for (i = 0; i < n1; i++) {
        merged[k++] = arr1[i];
    }

    // Copy elements of arr2 to merged array
    for (i = 0; i < n2; i++) {
        merged[k++] = arr2[i];
    }
}

// Function to merge two sorted arrays
void mergeSortedArrays(int arr1[], int n1, int arr2[], int n2, int merged[]) {
    int i = 0, j = 0, k = 0;

    // Traverse both arrays and pick the smaller element to merge
    while (i < n1 && j < n2) {
        if (arr1[i] < arr2[j]) {
            merged[k++] = arr1[i++];
        } else {
            merged[k++] = arr2[j++];
        }
    }

    // Copy the remaining elements of arr1, if any
    while (i < n1) {
        merged[k++] = arr1[i++];
    }

    // Copy the remaining elements of arr2, if any
    while (j < n2) {
        merged[k++] = arr2[j++];
    }
}

// Function to sort an array (using bubble sort for simplicity)
void sortArray(int arr[], int n) {
    int temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - 1 - i; j++) {
            if (arr[j] > arr[j + 1]) {
                // Swap arr[j] and arr[j + 1]
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    int n1, n2;

    // Input size of first array
    printf("Enter the number of elements in the first array: ");
    scanf("%d", &n1);
    int arr1[n1];

    // Input elements of first array (unsorted)
    printf("Enter the elements of the first array (unsorted): ");
    for (int i = 0; i < n1; i++) {
        scanf("%d", &arr1[i]);
    }

    // Input size of second array
    printf("Enter the number of elements in the second array: ");
    scanf("%d", &n2);
    int arr2[n2];

    // Input elements of second array (unsorted)
    printf("Enter the elements of the second array (unsorted): ");
    for (int i = 0; i < n2; i++) {
        scanf("%d", &arr2[i]);
    }

    // Display the unsorted arrays
    printf("Unsorted first array: ");
    for (int i = 0; i < n1; i++) {
        printf("%d ", arr1[i]);
    }
    printf("\n");

    printf("Unsorted second array: ");
    for (int i = 0; i < n2; i++) {
        printf("%d ", arr2[i]);
    }
    printf("\n");

    // Sort both arrays
    sortArray(arr1, n1);
    sortArray(arr2, n2);

    // Display the sorted arrays
    printf("Sorted first array: ");
    for (int i = 0; i < n1; i++) {
        printf("%d ", arr1[i]);
    }
    printf("\n");

    printf("Sorted second array: ");
    for (int i = 0; i < n2; i++) {
        printf("%d ", arr2[i]);
    }
    printf("\n");

    // Merge the sorted arrays
    int mergedSorted[n1 + n2];
    mergeSortedArrays(arr1, n1, arr2, n2, mergedSorted);

    // Display the merged sorted array
    printf("Merged sorted array: ");
    for (int i = 0; i < n1 + n2; i++) {
        printf("%d ", mergedSorted[i]);
    }
    printf("\n");

    // Merge the unsorted arrays
    int mergedUnsorted[n1 + n2];
    mergeUnsortedArrays(arr1, n1, arr2, n2, mergedUnsorted);

    // Display the merged unsorted array
    printf("Merged unsorted array: ");
    for (int i = 0; i < n1 + n2; i++) {
        printf("%d ", mergedUnsorted[i]);
    }
    printf("\n");

    return 0;
}
